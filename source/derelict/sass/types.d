/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/

module derelict.sass.types;

enum Sass_Tag {
    SASS_BOOLEAN,
    SASS_NUMBER,
    SASS_COLOR,
    SASS_STRING,
    SASS_LIST,
    SASS_MAP,
    SASS_NULL,
    SASS_ERROR
}

enum Sass_Separator {
    SASS_COMMA,
    SASS_SPACE
}

struct Sass_C_Function_Descriptor {
    const char*     signature;
    Sass_C_Function function_;
    void*           cookie;
}

union Sass_Value {
    Sass_Unknown unknown;
    Sass_Boolean boolean;
    Sass_Number number;
    Sass_Color color;
    Sass_String string;
    Sass_List list;
    Sass_Map map;
    Sass_Null null_;
    Sass_Error error;
}

struct Sass_Unknown {
    Sass_Tag tag;
}

struct Sass_Boolean {
    Sass_Tag tag;
    bool value;
}

struct Sass_Number {
    Sass_Tag tag;
    double value;
    char* unit;
}

struct Sass_Color {
    Sass_Tag tag;
    double r;
    double g;
    double b;
    double a;
}

struct Sass_String {
    Sass_Tag tag;
    char* value;
}

struct Sass_List {
    Sass_Tag tag;
    Sass_Separator separator;
    size_t length;
    Sass_Value** values;
}

struct Sass_Map {
    Sass_Tag tag;
    size_t length;
    Sass_MapPair* pairs;
}

struct Sass_Null {
    Sass_Tag tag;
}

struct Sass_Error {
    Sass_Tag tag;
    char* message;
}

struct Sass_MapPair {
    Sass_Value* key;
    Sass_Value* value;
}

alias Sass_C_Function_List = Sass_C_Function_Descriptor* function ();
alias Sass_C_Function = Sass_Value* function (Sass_Value*, void* cookie);

